generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  body        String
  isPublished Boolean   @default(true)
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  comments    Comment[]
  createdAt   DateTime  @default(now())

  @@unique([authorId, title])
}

model Comment {
  id              Int       @id @default(autoincrement())
  body            String
  parentComment   Comment?  @relation(name: "Replies", fields: [parentCommentId], references: [id])
  parentCommentId Int?
  replies         Comment[] @relation(name: "Replies")
  post            Post      @relation(fields: [postId], references: [id])
  postId          Int
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime  @default(now())
}

model User {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  email     String     @unique
  password  String
  bio       String?
  posts     Post[]
  comments  Comment[]
  following Follower[] @relation(name: "Followees")
  followers Follower[] @relation(name: "Followers")
}

model Follower {
  id           Int       @id @default(autoincrement())
  followee     User      @relation(name: "Followees", fields: [followeeId], references: [id])
  followeeId   Int
  follower     User      @relation(name: "Followers", fields: [followerId], references: [id])
  followerId   Int
  followedAt   DateTime  @default(now())
  unfollowedAt DateTime?
}
